(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     58366,       2367]
NotebookOptionsPosition[     55556,       2250]
NotebookOutlinePosition[     55930,       2266]
CellTagsIndexPosition[     55887,       2263]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Mathematica Multivariable Cumulative Project", "Title",
 CellID->87],

Cell["Brendan Horng 6/13/16", "Subtitle",
 CellID->90],

Cell[CellGroupData[{

Cell[TextData[StyleBox["I would recommend going through this section by \
section and not evaluating all cells. But, I tested that evaluation of the \
entire notebook won\[CloseCurlyQuote]t break it.",
 FontWeight->"Bold"]], "Subsubitem",
 CellChangeTimes->{{3.6749107942259617`*^9, 3.6749108450250406`*^9}}],

Cell[TextData[StyleBox["There are some parameters that I left that you can \
play with and change around. Read the comments prior to changing the \
variables.",
 FontWeight->"Bold"]], "Subsubitem",
 CellChangeTimes->{{3.6749107942259617`*^9, 3.6749108710056386`*^9}, {
  3.674910992274764*^9, 3.674911047629299*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Idea: Generated Trees with Fractal Structures", "Section",
 CellID->93],

Cell["\<\
This is obviously not an entirely original idea. I was brainstorming for \
ideas when I remembered this simple, yet interesting programming exercise: \
generation of trees with fractal structures.
One quick google search led me to images such as this:\
\>", "Text",
 CellID->96],

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<https://www.rosettacode.org/mw/images/a/a3/Fractal_tree_bbc.gif\>\"", 
  "]"}]], "Input",
 CellID->153],

Cell[TextData[{
 "From here I took this idea and set out to create a 3-Dimensional version of \
it using cylinders as my basis for branches. The algorithm (although probably \
thought of before) was written from scratch without aid of any external \
resources besides the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Documentation."
}], "Text",
 CellChangeTimes->{{3.6749111378423195`*^9, 3.6749111762511597`*^9}},
 CellID->175]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function Definitions:", "Section",
 CellID->12],

Cell[TextData[{
 "A",
 " ",
 "couple",
 " ",
 "of",
 " ",
 "definitions",
 " ",
 "to",
 " ",
 "help",
 " ",
 "out",
 " ",
 "with",
 " ",
 "the",
 " ",
 "rest",
 " ",
 "of",
 " ",
 "the",
 " ",
 "generation",
 ".",
 " ",
 "The",
 " ",
 "rest",
 " ",
 "of",
 " ",
 "the",
 " ",
 "algorithm",
 " ",
 "that",
 " ",
 "I",
 " ",
 "wrote",
 " ",
 "hinges",
 " ",
 "on",
 " ",
 "these",
 " ",
 "functions",
 ".",
 " ",
 "I",
 " ",
 "will",
 " ",
 "briefly",
 " ",
 "describe",
 " ",
 "the",
 " ",
 "purpose",
 " ",
 "of",
 " ",
 "each",
 " ",
 "of",
 " ",
 "them",
 ":",
 "\n",
 "\n",
 StyleBox["CalculateNewSize",
  FontWeight->Bold],
 ":",
 " ",
 "I",
 " ",
 "wanted",
 " ",
 "the",
 " ",
 "thickness",
 " ",
 "of",
 " ",
 "the",
 " ",
 "\"",
 "branch",
 "\"",
 " ",
 "(",
 "in",
 " ",
 "this",
 " ",
 "algorithm",
 ",",
 " ",
 "the",
 " ",
 "trunk",
 " ",
 "is",
 " ",
 "also",
 " ",
 "classified",
 " ",
 "as",
 " ",
 "a",
 " ",
 "branch",
 ")",
 " ",
 "to",
 " ",
 "decrease",
 " ",
 "with",
 " ",
 "some",
 " ",
 "function",
 " ",
 "as",
 " ",
 "its",
 " ",
 "depth",
 " ",
 "increased",
 ".",
 "\n",
 "\n",
 StyleBox["CalculateNewLength",
  FontWeight->Bold],
 ":",
 " ",
 "I",
 " ",
 "wanted",
 " ",
 "the",
 " ",
 "length",
 " ",
 "of",
 " ",
 "the",
 " ",
 "\"",
 "branch",
 "\"",
 " ",
 "to",
 " ",
 "decrease",
 " ",
 "with",
 " ",
 "some",
 " ",
 "function",
 " ",
 "as",
 " ",
 "its",
 " ",
 "depth",
 " ",
 "increased",
 ".",
 "\n",
 "\n",
 StyleBox["CalculateNewPos",
  FontWeight->Bold],
 ":",
 " ",
 "Simple",
 " ",
 "helper",
 " ",
 "function",
 " ",
 "to",
 " ",
 "help",
 " ",
 "calculate",
 " ",
 "the",
 " ",
 "endpoint",
 " ",
 "of",
 " ",
 "a",
 " ",
 "cylinder",
 " ",
 "given",
 " ",
 "it",
 "'",
 "s",
 " ",
 "origin",
 " ",
 "position",
 ",",
 " ",
 "length",
 ",",
 " ",
 "and",
 " ",
 "theta",
 ".",
 "\n",
 "\n",
 StyleBox["GenerateCylinder",
  FontWeight->Bold],
 ":",
 " ",
 "Function",
 " ",
 "that",
 " ",
 "allows",
 " ",
 "me",
 " ",
 "to",
 " ",
 "produce",
 " ",
 "a",
 " ",
 "cylinder",
 " ",
 "based",
 " ",
 "on",
 " ",
 "an",
 " ",
 "origin",
 " ",
 "point",
 ",",
 " ",
 "a",
 " ",
 "length",
 ",",
 " ",
 "a",
 " ",
 "radius",
 ",",
 " ",
 "and",
 " ",
 "some",
 " ",
 "theta",
 " ",
 "(",
 "rotated",
 " ",
 "around",
 " ",
 "the",
 " ",
 "y",
 "-",
 "axis",
 ").",
 "\n",
 "\n",
 StyleBox["DegreeToRadian",
  FontWeight->Bold],
 ":",
 " ",
 "Helper",
 " ",
 "function",
 " ",
 "that",
 " ",
 "just",
 " ",
 "improved",
 " ",
 "readibility",
 " ",
 "when",
 " ",
 "I",
 " ",
 "was",
 " ",
 "converting",
 " ",
 "degree",
 " ",
 "values",
 " ",
 "to",
 " ",
 "radians",
 ".",
 "\n",
 "\n",
 "You",
 " ",
 "always",
 " ",
 "want",
 " ",
 "to",
 " ",
 "run",
 " ",
 "this",
 " ",
 "node",
 " ",
 "first",
 " ",
 "prior",
 " ",
 "to",
 " ",
 "almost",
 " ",
 "everything",
 " ",
 "else",
 " ",
 "in",
 " ",
 "this",
 " ",
 "notebook",
 " ",
 "because",
 " ",
 "the",
 " ",
 "rest",
 " ",
 "of",
 " ",
 "it",
 " ",
 "hinges",
 " ",
 "on",
 " ",
 "these",
 " ",
 "definitions",
 ".",
 "\n",
 "The",
 " ",
 StyleBox["CalculateNewSize",
  FontWeight->Bold],
 " ",
 "and",
 " ",
 StyleBox["CalculateNewLength",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["can",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["be",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["changed",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["to",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["other",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["functions",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["for",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["varying",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["effects",
  FontWeight->Plain],
 StyleBox[".",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["The",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["current",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["way",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["that",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["they",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["are",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["set",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["produced",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["interesting",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["enough",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["trees",
  FontWeight->Plain],
 StyleBox[",",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["so",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["I",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["left",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["them",
  FontWeight->Plain],
 StyleBox[".",
  FontWeight->Plain]
}], "Text",
 CellID->469],

Cell[BoxData[{
 RowBox[{"CalculateNewSize", "[", "prevSize_", "]", ":=", "prevSize", "*", 
  ".75", ";"}], "\n", 
 RowBox[{"CalculateNewLength", "[", "prevLength_", "]", ":=", "prevLength", 
  "*", ".8", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateNewPos", "[", 
    RowBox[{"prevPos_", ",", "d_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"prevPos", "+", 
    RowBox[{"d", "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateCylinder", "[", 
    RowBox[{"origin_", ",", "d_", ",", "r_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Cylinder", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"origin", ",", 
       RowBox[{"CalculateNewPos", "[", 
        RowBox[{"origin", ",", "d", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
     "r"}], "]"}]}], ";"}], "\n", 
 RowBox[{"DegreeToRadian", "[", "deg_", "]", ":=", "deg", " ", "Degree", 
  ";"}]}], "Input",
 InitializationCell->False,
 CellChangeTimes->{{3.6738809820516414`, 3.6738809866963873`}, 
   3.673881090364769*^9, {3.6738812791583366`, 3.673881322268713*^9}, {
   3.673881356647836, 3.6738815500834616`}, {3.673881589104462, 
   3.673881601115461}, {3.673881694523461, 3.6738818038154615`}, {
   3.673881871980462, 3.673881893202461}, {3.6738819285014617`, 
   3.673881974157099*^9}, {3.673882074521134*^9, 3.673882199110592*^9}, {
   3.673882267386419*^9, 3.6738822916578453`}, {3.6738823439100705`, 
   3.6738824110887878`}, {3.673882514883166, 3.673882544462124*^9}, {
   3.6738826539540717`, 3.6738826901156876`}, {3.673882863779052*^9, 
   3.67388287196387*^9}, {3.673882959999673*^9, 3.6738830225998518`}, {
   3.6738830584858513`, 3.6738831574958515`}, {3.6738832183498515`, 
   3.6738832795298513`}, {3.673883510605851*^9, 3.673883513683851}, {
   3.673883702667942*^9, 3.673883712507926*^9}, {3.6738837813308076`, 
   3.673883782695944*^9}, {3.673883841811855*^9, 3.6738838789725703`}, 
   3.673967499920079, {3.673967570864445*^9, 3.673967570900459}, {
   3.673967702459062*^9, 3.673967885713343}, {3.673968068332098*^9, 
   3.6739680999972646`}, {3.673968137831047*^9, 3.6739682561638793`}, 
   3.673968333015564*^9, {3.6739683825685185`, 3.673968392425505}, {
   3.673968424195681*^9, 3.673968441756437*^9}, {3.6739684738136424`, 
   3.673968627138973*^9}, {3.673968685718831*^9, 3.6739688187421318`}, {
   3.6739688733345903`, 3.6739689363928956`}, {3.673968978379094*^9, 
   3.6739691845257063`}, {3.6739692649347466`, 3.67396936678093*^9}, {
   3.6739694613447136`, 3.6739696353433886`}, {3.673969698120666*^9, 
   3.673969724072261*^9}, {3.673969760619915*^9, 3.6739697608169344`}, {
   3.6739697974305963`, 3.673969847698712*^9}, {3.6739698989707117`, 
   3.6739699748197117`}, {3.6739700469017116`, 3.673970046997712*^9}, {
   3.6739701039247117`, 3.6739701382677117`}, {3.673970175345712, 
   3.673970180296712*^9}, {3.673970213623712, 3.6739702243427113`}, {
   3.673970257973712*^9, 3.673970461449712*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Journey:", "Section",
 CellID->14],

Cell["\<\
Now allow me to take you on the path that I took to learn the necessary \
skills to produce this algorithm. This project seemed like fun to me because \
all year I had wanted to learn about Mathematica's procedural programming \
constructs, but I never had the chance during the lab times.\
\>", "Text",
 CellID->16],

Cell[CellGroupData[{

Cell["Graphics3D", "Subsection",
 CellID->17],

Cell["\<\
Testing some Graphics3D things. I quickly learned that I could show a set of \
Graphics3D objects. This becomes important later as my trees are simply a set \
of branches.\
\>", "Text",
 CellID->470],

Cell[BoxData[{
 RowBox[{"graphics1", "=", "Graphics3D", "[", "{", "Brown", ",", 
  "GenerateCylinder", "[", "{", "0", ",", "0", ",", "0", "}", ",", "10", ",", 
  "2", ",", "0", "]", ",", "Sphere", "[", "{", "10", ",", "0", ",", "0", "}", 
  ",", "2", "]", ",", "GenerateCylinder", "[", "{", "10", ",", "0", ",", "0", 
  "}", ",", "5", ",", "1.5", ",", "\[Pi]", "/", "4", "]", ",", 
  "GenerateCylinder", "[", "{", "10", ",", "0", ",", "0", "}", ",", "5", ",", 
  "1.5", ",", "-", "\[Pi]", "/", "4", "]", "}", "]", " ", ";"}], "\n", 
 RowBox[{"graphics2", "=", "Graphics3D", "[", "{", "Green", ",", " ", 
  "GenerateCylinder", "[", "{", "0", ",", "10", ",", "0", "}", ",", "10", ",",
   "2", ",", "0", "]", "}", "]", ";"}], "\n", 
 RowBox[{"groupOfGfx", "=", "{", "graphics1", ",", "graphics2", "}", 
  ";"}], "\n", 
 RowBox[{"Show", "[", "groupOfGfx", "]"}]}], "Input",
 CellID->8]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scoping and Procedural Programming Constructs", "Subsection",
 CellID->21],

Cell[TextData[{
 "In",
 " ",
 "the",
 " ",
 "next",
 " ",
 "node",
 ",",
 " ",
 "I",
 " ",
 "am",
 " ",
 "trying",
 " ",
 "to",
 " ",
 "figure",
 " ",
 "out",
 " ",
 "functions",
 " ",
 "and",
 " ",
 "modules",
 ".",
 " ",
 "I",
 " ",
 "had",
 " ",
 "some",
 " ",
 "difficulty",
 " ",
 "thinking",
 " ",
 "through",
 " ",
 "this",
 " ",
 "as",
 " ",
 "it",
 " ",
 "wasn",
 "\[CloseCurlyQuote]",
 "t",
 " ",
 "as",
 " ",
 "intuitive",
 " ",
 "to",
 " ",
 "me",
 " ",
 "coming",
 " ",
 "from",
 " ",
 "procedural",
 " ",
 "languages",
 ".",
 "\n",
 "Just",
 " ",
 "a",
 " ",
 "few",
 " ",
 "mental",
 " ",
 "front",
 " ",
 "flips",
 " ",
 "had",
 " ",
 "to",
 " ",
 "be",
 " ",
 "achieved",
 " ",
 "and",
 " ",
 "this",
 " ",
 "nice",
 " ",
 "example",
 " ",
 "from",
 " ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]",
 "s",
 " ",
 "documentation",
 " ",
 "got",
 " ",
 "me",
 " ",
 "through",
 " ",
 "it",
 "."
}], "Text",
 CellChangeTimes->{{3.674832836017933*^9, 3.6748328436746984`*^9}, {
  3.6748341756797447`*^9, 3.6748342356217446`*^9}},
 CellID->471],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gcd", "[", 
   RowBox[{"m0_", ",", " ", "n0_"}], "]"}], " ", ":=", "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", " ", "=", " ", "m0"}], ",", " ", 
      RowBox[{"n", " ", "=", " ", "n0"}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"n", " ", "\[NotEqual]", " ", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", " ", "n"}], "}"}], " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", 
          RowBox[{"Mod", "[", 
           RowBox[{"m", ",", " ", "n"}], "]"}]}], "}"}]}]}], "]"}], ";", "\n",
      "\t", "m"}]}], "\n", "]"}]}], "\n", 
 RowBox[{"gcd", "[", 
  RowBox[{"10", ",", "4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.674911242075342*^9, 3.674911248907342*^9}},
 CellID->82]
}, Open  ]],

Cell[CellGroupData[{

Cell["Iterative Definition of a Branching Structure", "Subsection",
 CellID->43],

Cell["\<\
Trying an iterative approach using loops to generate some n-depth tree \
branch. But quickly realized that the logic would not be quite as easy to \
implement in this fashion.\
\>", "Text",
 CellChangeTimes->{{3.6748328469860296`*^9, 3.6748328633796687`*^9}, {
  3.6748342410847445`*^9, 3.6748342543957443`*^9}},
 CellID->473],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gfxgroup", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CreateSubTree", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"prevPos", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"prevLength", "=", "10"}], ",", 
      RowBox[{"prevSize", "=", "5"}], ",", 
      RowBox[{"i", "=", "0"}], ",", 
      RowBox[{"curTheta", "=", "0"}], ",", 
      RowBox[{"diffTheta", "=", "15"}], ",", 
      RowBox[{"gfxgroup", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"i", "\[NotEqual]", "n"}], ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"gfxgroup", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"gfxgroup", ",", 
           RowBox[{"{", 
            RowBox[{"Graphics3D", "[", 
             RowBox[{"GenerateCylinder", "[", 
              RowBox[{"prevPos", ",", 
               RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
               RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
               RowBox[{"DegreeToRadian", "[", "curTheta", "]"}]}], "]"}], 
             "]"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"prevSize", "=", 
         RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], ";", "\n", 
        "\t\t", 
        RowBox[{"prevLength", "=", 
         RowBox[{"CalculateNewLength", "[", "prevLength", "]"}]}], ";", "\n", 
        "\t\t", 
        RowBox[{"prevPos", "=", 
         RowBox[{"CalculateNewPos", "[", 
          RowBox[{"prevPos", ",", "prevLength", ",", 
           RowBox[{"DegreeToRadian", "[", "curTheta", "]"}]}], "]"}]}], ";", 
        "\n", "\t\t", 
        RowBox[{"curTheta", "=", 
         RowBox[{"curTheta", "+", "diffTheta"}]}], ";", "\n", "\t\t", 
        RowBox[{"i", "=", 
         RowBox[{"i", "+", "1"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", 
     "\t", "gfxgroup"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"gfxgroup", "=", 
   RowBox[{"CreateSubTree", "[", "20", "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", "gfxgroup", "]"}]}], "Input",
 CellChangeTimes->{{3.674832901708501*^9, 3.674832918748205*^9}, {
   3.674832979095239*^9, 3.6748330396192913`*^9}, 3.6748330804613748`*^9},
 CellID->89]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recursive Generation of a Tree Structure", "Subsection",
 CellID->45],

Cell[TextData[{
 "I",
 " ",
 "swapped",
 " ",
 "to",
 " ",
 "a",
 " ",
 "recursive",
 " ",
 "definition",
 " ",
 "to",
 " ",
 "generate",
 " ",
 "the",
 " ",
 "tree",
 " ",
 "as",
 " ",
 "I",
 " ",
 "realized",
 " ",
 "it",
 " ",
 "would",
 " ",
 "be",
 " ",
 "easier",
 " ",
 "to",
 " ",
 "write",
 " ",
 "the",
 " ",
 "sub",
 "-",
 "branch",
 " ",
 "logic",
 " ",
 "in",
 " ",
 "this",
 " ",
 "fashion",
 ".",
 "\n",
 "This",
 " ",
 "definition",
 " ",
 "finally",
 " ",
 "got",
 " ",
 "somewhere",
 ".",
 " ",
 "This",
 " ",
 "is",
 " ",
 "the",
 " ",
 "first",
 " ",
 "iteration",
 " ",
 "of",
 " ",
 "the",
 " ",
 "algorithm",
 " ",
 "that",
 " ",
 "could",
 " ",
 "produce",
 " ",
 "tree",
 "-",
 "like",
 " ",
 "structures",
 ".",
 "\n",
 "The",
 " ",
 "root",
 " ",
 "branch",
 " ",
 "(",
 "the",
 " ",
 "trunk",
 ")",
 " ",
 "is",
 " ",
 "added",
 " ",
 "to",
 " ",
 "the",
 " ",
 "set",
 " ",
 "initially",
 ".",
 " ",
 "From",
 " ",
 "there",
 ",",
 " ",
 StyleBox["CreateTree",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["continues",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["to",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["add",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["a",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["set",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["of",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["two",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["branches",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["recursively",
  FontWeight->Plain],
 StyleBox[".",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["On",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["each",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["of",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["those",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["two",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["branches",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["it",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["also",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["adds",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["another",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["two",
  FontWeight->Plain],
 StyleBox[",",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["etc",
  FontWeight->Plain],
 StyleBox[",",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["etc",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["until",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["a",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["certain",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["depth",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["is",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["reached",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["in",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["recursion",
  FontWeight->Plain],
 StyleBox[".",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 "\n",
 StyleBox["This",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["technique",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["makes",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["use",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["of",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["fact",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["that",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["Show",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["command",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["will",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["show",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["a",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["set",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["of",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["Graphics3D",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["objects",
  FontWeight->Plain],
 StyleBox[".",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["So",
  FontWeight->Plain],
 StyleBox[",",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["I",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["just",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["get",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["Union",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["of",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["set",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["with",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["two",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["new",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["branches",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["during",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["each",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["iteration",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["and",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["set",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["global",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["tree",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["variable",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["to",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["that",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["Union",
  FontWeight->Bold],
 StyleBox[".",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["This",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["guarantees",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["that",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["as",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["I",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["generate",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["tree",
  FontWeight->Plain],
 StyleBox[",",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["set",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["will",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["simply",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["grow",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["with",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["addition",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["of",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["the",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["two",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["branches",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["that",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["are",
  FontWeight->Plain],
 StyleBox[" ",
  FontWeight->Plain],
 StyleBox["added",
  FontWeight->Plain],
 StyleBox[".",
  FontWeight->Plain],
 "\n",
 "\n",
 "In",
 " ",
 "each",
 " ",
 "of",
 " ",
 "the",
 " ",
 "subsequent",
 " ",
 "nodes",
 ",",
 " ",
 "I",
 " ",
 "have",
 " ",
 "a",
 " ",
 "set",
 " ",
 "of",
 " ",
 "predefined",
 " ",
 "constants",
 " ",
 "that",
 " ",
 "make",
 " ",
 "for",
 " ",
 "easier",
 " ",
 "editing",
 " ",
 "of",
 " ",
 "the",
 " ",
 "tree",
 " ",
 "generation",
 "."
}], "Text",
 CellID->475],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Constant", " ", "Definitions"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"initLength", "=", "20"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Initial", " ", "length", " ", "of", " ", "the", " ", 
     RowBox[{"branch", ".", " ", "Decreases"}], " ", "based", " ", "on", " ", 
     "the", " ", "CalculateNewLength", " ", "function", " ", "defined", " ", 
     RowBox[{"above", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"initSize", "=", "5"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Initial", " ", "thickness", " ", "of", " ", "the", " ", 
     RowBox[{"branch", ".", " ", "Decreases"}], " ", "based", " ", "on", " ", 
     "the", " ", "CalculateNewSize", " ", "function", " ", "defined", " ", 
     RowBox[{"above", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"initTheta", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Don", "'"}], "t"}], " ", "touch", " ", "this", " ", 
     RowBox[{"one", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"numIterations", "=", "5"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"The", " ", "maximum", " ", "depth", " ", "of", " ", "the", " ", 
     RowBox[{"tree", ".", " ", "This"}], " ", "ensures", " ", "that", " ", 
     "the", " ", "tree", " ", "will", " ", "not", " ", "generate", " ", 
     RowBox[{"infinitely", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"deltaTheta", "=", "25"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "amount", " ", "that", " ", "new", " ", "branches", " ", 
     "\"\<branch\>\"", " ", "or", " ", "divert", " ", "off", " ", "from", " ",
      "the", " ", "path", " ", "of", " ", "the", " ", "parent", " ", 
     RowBox[{"branch", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"End", " ", "Constant", " ", "Definitions"}], "*)"}], "\n", "\n", 
   RowBox[{
   "tree", "=", "{", "Graphics3D", "[", "{", "GenerateCylinder", "[", "{", 
    "0", ",", "0", ",", "0", "}", ",", "initLength", ",", "initSize", ",", 
    "initTheta", "]", "}", "]", "}", ";"}], "\n", 
   RowBox[{
    RowBox[{"CreateTree", "[", 
     RowBox[{
     "pos_", ",", " ", "length_", ",", "size_", ",", "theta_", ",", "depth_", 
      ",", "n_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prevPos", "=", "pos"}], ",", 
        RowBox[{"prevLength", "=", "length"}], ",", 
        RowBox[{"prevSize", "=", "size"}], ",", 
        RowBox[{"curTheta", "=", "theta"}], ",", 
        RowBox[{"i", "=", "depth"}], ",", 
        RowBox[{"diffTheta", "=", "deltaTheta"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"tree", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"tree", ",", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"GenerateCylinder", "[", 
               RowBox[{"prevPos", ",", 
                RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                RowBox[{"DegreeToRadian", "[", 
                 RowBox[{"curTheta", "+", "diffTheta"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "\t\t", "}"}], "]"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"GenerateCylinder", "[", 
               RowBox[{"prevPos", ",", 
                RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                RowBox[{"DegreeToRadian", "[", 
                 RowBox[{"curTheta", "-", "diffTheta"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", "\t\t", "}"}], "]"}]}], "\n", "\t\t", 
           "}"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevSize", "=", 
        RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevLength", "=", 
        RowBox[{"CalculateNewLength", "[", "prevLength", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"i", "=", 
        RowBox[{"i", "+", "1"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[NotEqual]", "n"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "+", "diffTheta"}], "]"}]}], "]"}], ",", 
            "prevLength", ",", "prevSize", ",", 
            RowBox[{"curTheta", "+", "diffTheta"}], ",", "i", ",", "n"}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "-", "diffTheta"}], "]"}]}], "]"}], ",", 
            " ", "prevLength", ",", " ", "prevSize", ",", " ", 
            RowBox[{"curTheta", "-", "diffTheta"}], ",", "i", ",", "n"}], 
           "]"}], ";"}], ","}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
   "CreateTree", "[", "{", "0", ",", "0", ",", "initLength", "}", ",", 
    "initLength", ",", "initSize", ",", "initTheta", ",", "0", ",", 
    "numIterations", "]", ";"}], "\n", 
   RowBox[{"Show", "[", "tree", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.674831656418985*^9, 3.6748316654078836`*^9}, {
   3.6748317010104437`*^9, 3.6748318393842793`*^9}, {3.674831882378578*^9, 
   3.6748320631166506`*^9}, {3.674832590275361*^9, 3.674832594591793*^9}, {
   3.674833245521879*^9, 3.674833295456872*^9}, {3.6748336187271957`*^9, 
   3.674833680257348*^9}, 3.6748337544607677`*^9, {3.674833950927413*^9, 
   3.6748339598233023`*^9}, {3.674834027530072*^9, 3.674834029464266*^9}},
 CellID->150]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tweaks to the Recursive Definition", "Subsection",
 CellID->53],

Cell[CellGroupData[{

Cell["Throw in a Little Color:", "Subsubsection",
 CellID->86],

Cell["\<\
Pretty self explanatory. I just add some color to make the structure seem \
more \"tree-like\". I have a simple function to change the color from brown \
to green after reaching a certain depth.\
\>", "Text",
 CellID->176],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Constant", " ", "Definitions"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"initLength", "=", "20", ";"}], "\n", 
   RowBox[{"initSize", "=", "5", ";"}], "\n", 
   RowBox[{
    RowBox[{"initTheta", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Don", "'"}], "t"}], " ", "touch", " ", "this", " ", 
     RowBox[{"one", "."}]}], "*)"}], "\n", 
   RowBox[{"numIterations", "=", "5", ";"}], "\n", 
   RowBox[{"deltaTheta", "=", "25", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"End", " ", "Constant", " ", "Definitions"}], "*)"}], "\n", "\n", 
   RowBox[{
   "tree", "=", "{", "Graphics3D", "[", "{", "Brown", ",", "GenerateCylinder",
     "[", "{", "0", ",", "0", ",", "0", "}", ",", "initLength", ",", 
    "initSize", ",", "initTheta", "]", "}", "]", "}", ";"}], "\n", 
   RowBox[{
    RowBox[{"CreateTree", "[", 
     RowBox[{
     "pos_", ",", " ", "length_", ",", "size_", ",", "theta_", ",", "depth_", 
      ",", "n_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prevPos", "=", "pos"}], ",", 
        RowBox[{"prevLength", "=", "length"}], ",", 
        RowBox[{"prevSize", "=", "size"}], ",", 
        RowBox[{"curTheta", "=", "theta"}], ",", 
        RowBox[{"i", "=", "depth"}], ",", 
        RowBox[{"diffTheta", "=", "deltaTheta"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"tree", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"tree", ",", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", "/", "n"}], "<", "0.5"}], ",", "Brown", 
                 ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"GenerateCylinder", "[", 
                RowBox[{"prevPos", ",", 
                 RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                 RowBox[{"DegreeToRadian", "[", 
                  RowBox[{"curTheta", "+", "diffTheta"}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "\t\t", "}"}], "]"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", "/", "n"}], "<", "0.5"}], ",", "Brown", 
                 ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"GenerateCylinder", "[", 
                RowBox[{"prevPos", ",", 
                 RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                 RowBox[{"DegreeToRadian", "[", 
                  RowBox[{"curTheta", "-", "diffTheta"}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "\t\t", "}"}], "]"}]}], "\n", "\t\t", 
           "}"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevSize", "=", 
        RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevLength", "=", 
        RowBox[{"CalculateNewLength", "[", "prevLength", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"i", "=", 
        RowBox[{"i", "+", "1"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[NotEqual]", "n"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "+", "diffTheta"}], "]"}]}], "]"}], ",", 
            "prevLength", ",", "prevSize", ",", 
            RowBox[{"curTheta", "+", "diffTheta"}], ",", "i", ",", "n"}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "-", "diffTheta"}], "]"}]}], "]"}], ",", 
            " ", "prevLength", ",", " ", "prevSize", ",", " ", 
            RowBox[{"curTheta", "-", "diffTheta"}], ",", "i", ",", "n"}], 
           "]"}], ";"}], ","}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
   "CreateTree", "[", "{", "0", ",", "0", ",", "initLength", "}", ",", 
    "initLength", ",", "initSize", ",", "initTheta", ",", "0", ",", 
    "numIterations", "]", ";"}], "\n", 
   RowBox[{"Show", "[", "tree", "]"}]}]}]], "Input",
 CellID->88]
}, Open  ]],

Cell[CellGroupData[{

Cell["Varying Angles:", "Subsubsection",
 CellID->75],

Cell[TextData[{
 "But I was hoping that I could do better, in the next node, I made a very \
small modification. There is now an extra deltaTheta constant that can be \
assigned. In the previous node, the fractal would be generated symmetrically \
along the z-axis.\nThis no longer needs to be the case. All other constants \
function as the last example did. Much of the code in this one is identical \
to the previous node.\n",
 StyleBox["I would recommend if you want to play with constant values, do it \
in this one and not the next one (or any of the previous ones). I would \
recommend not generating beyond a depth of 13 (setting numIterations beyond \
13). It takes quite a bit of time. Although, 13 looks pretty nice if you are \
willing to wait for it. 10 is a pretty nice number that produces a pretty \
complex looking tree while still not taking forever.",
  FontWeight->Bold]
}], "Text",
 CellChangeTimes->{{3.6748325710544395`*^9, 3.6748325851268463`*^9}, {
  3.67483274098143*^9, 3.67483282949028*^9}, {3.6748342691717443`*^9, 
  3.6748342753227444`*^9}, {3.674910496551197*^9, 3.6749104998215237`*^9}, {
  3.6749106920467443`*^9, 3.6749107453610754`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Constant", " ", "Definitions"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"initLength", "=", "100", ";"}], "\n", 
   RowBox[{"initSize", "=", "20", ";"}], "\n", 
   RowBox[{
    RowBox[{"initTheta", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Don", "'"}], "t"}], " ", "touch", " ", "this", " ", 
     RowBox[{"one", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"numIterations", "=", "10"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"deltaTheta1", "=", "15"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"deltaTheta2", "=", "35"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"End", " ", "Constant", " ", "Definitions"}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"tree", "=", 
     RowBox[{"{", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Brown", ",", 
         RowBox[{"GenerateCylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "initLength", ",", 
           "initSize", ",", "initTheta"}], "]"}]}], "}"}], "]"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"CreateTree", "[", 
     RowBox[{
     "pos_", ",", " ", "length_", ",", "size_", ",", "theta_", ",", "depth_", 
      ",", "n_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prevPos", "=", "pos"}], ",", 
        RowBox[{"prevLength", "=", "length"}], ",", 
        RowBox[{"prevSize", "=", "size"}], ",", 
        RowBox[{"curTheta", "=", "theta"}], ",", 
        RowBox[{"i", "=", "depth"}], ",", 
        RowBox[{"diffTheta1", "=", "deltaTheta1"}], ",", 
        RowBox[{"diffTheta2", "=", "deltaTheta2"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"tree", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"tree", ",", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", "/", "n"}], "<", "0.5"}], ",", "Brown", 
                 ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"GenerateCylinder", "[", 
                RowBox[{"prevPos", ",", 
                 RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                 RowBox[{"DegreeToRadian", "[", 
                  RowBox[{"curTheta", "+", "diffTheta1"}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "\t\t", "}"}], "]"}], ",", "\n", 
            "\t\t\t", 
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", "/", "n"}], "<", "0.5"}], ",", "Brown", 
                 ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"GenerateCylinder", "[", 
                RowBox[{"prevPos", ",", 
                 RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                 RowBox[{"DegreeToRadian", "[", 
                  RowBox[{"curTheta", "-", "diffTheta2"}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "\t\t", "}"}], "]"}]}], "\n", "\t\t", 
           "}"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevSize", "=", 
        RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevLength", "=", 
        RowBox[{"CalculateNewLength", "[", "prevLength", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"i", "=", 
        RowBox[{"i", "+", "1"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[NotEqual]", "n"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "+", "diffTheta1"}], "]"}]}], "]"}], ",", 
            "prevLength", ",", "prevSize", ",", 
            RowBox[{"curTheta", "+", "diffTheta1"}], ",", "i", ",", "n"}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "-", "diffTheta2"}], "]"}]}], "]"}], ",", 
            " ", "prevLength", ",", " ", "prevSize", ",", " ", 
            RowBox[{"curTheta", "-", "diffTheta2"}], ",", "i", ",", "n"}], 
           "]"}], ";"}], ","}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"CreateTree", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "initLength"}], "}"}], ",", "initLength", 
      ",", "initSize", ",", "initTheta", ",", "0", ",", "numIterations"}], 
     "]"}], ";"}], "\n", 
   RowBox[{"Show", "[", "tree", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.674832107102049*^9, 3.6748321224205804`*^9}, {
  3.674832156694007*^9, 3.674832166742012*^9}, {3.67483220382372*^9, 
  3.674832212014539*^9}, {3.6748325031426487`*^9, 3.6748325538567195`*^9}, {
  3.6748331179401226`*^9, 3.6748331218015084`*^9}, {3.6748331599703245`*^9, 
  3.6748331752598534`*^9}, {3.6749105030458465`*^9, 3.6749106134218826`*^9}, {
  3.6749106461771584`*^9, 3.674910646241164*^9}, {3.674910685819122*^9, 
  3.674910685933133*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spheres at Tips", "Subsubsection",
 CellID->78],

Cell[TextData[{
 "This",
 " ",
 "one",
 " ",
 "was",
 " ",
 "purely",
 " ",
 "out",
 " ",
 "of",
 " ",
 "curiosity",
 " ",
 "as",
 " ",
 "to",
 " ",
 "how",
 " ",
 "it",
 " ",
 "would",
 " ",
 "look",
 " ",
 "aesthetically",
 ".",
 " ",
 "I",
 " ",
 "just",
 " ",
 "append",
 " ",
 "spheres",
 " ",
 "to",
 " ",
 "the",
 " ",
 "tips",
 " ",
 "of",
 " ",
 "each",
 " ",
 "branch",
 " ",
 "in",
 " ",
 "order",
 " ",
 "to",
 " ",
 "smooth",
 " ",
 "out",
 " ",
 "the",
 " ",
 "transitions",
 ".",
 "\n",
 StyleBox["Do",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["not",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["go",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["too",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["high",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["on",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["the",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["iterations",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["here",
  FontWeight->Bold],
 StyleBox[",",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["as",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["the",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["number",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["of",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["objects",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["generated",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["is",
  FontWeight->Bold],
 StyleBox[" ",
  FontWeight->Bold],
 StyleBox["doubled",
  FontWeight->Bold],
 StyleBox[".",
  FontWeight->Bold]
}], "Text",
 CellID->152],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Constant", " ", "Definitions"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"initLength", "=", "100", ";"}], "\n", 
   RowBox[{"initSize", "=", "20", ";"}], "\n", 
   RowBox[{
    RowBox[{"initTheta", "=", "0"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Don", "'"}], "t"}], " ", "touch", " ", "this", " ", 
     RowBox[{"one", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"numIterations", "=", "7"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"deltaTheta1", "=", "35"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"deltaTheta2", "=", "15"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"End", " ", "Constant", " ", "Definitions"}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tree", "=", 
     RowBox[{"{", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Brown", ",", 
         RowBox[{"GenerateCylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "initLength", ",", 
           "initSize", ",", "initTheta"}], "]"}], ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "initLength"}], "}"}], ",", 
           "initSize"}], "]"}]}], "}"}], "]"}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CreateTree", "[", 
     RowBox[{
     "pos_", ",", " ", "length_", ",", "size_", ",", "theta_", ",", "depth_", 
      ",", "n_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prevPos", "=", "pos"}], ",", 
        RowBox[{"prevLength", "=", "length"}], ",", 
        RowBox[{"prevSize", "=", "size"}], ",", 
        RowBox[{"curTheta", "=", "theta"}], ",", 
        RowBox[{"i", "=", "depth"}], ",", 
        RowBox[{"diffTheta1", "=", "deltaTheta1"}], ",", 
        RowBox[{"diffTheta2", "=", "deltaTheta2"}]}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"tree", "=", 
        RowBox[{"Union", "[", 
         RowBox[{"tree", ",", "\n", "\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", "/", "n"}], "<", "0.5"}], ",", "Brown", 
                 ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"GenerateCylinder", "[", 
                RowBox[{"prevPos", ",", 
                 RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                 RowBox[{"DegreeToRadian", "[", 
                  RowBox[{"curTheta", "+", "diffTheta1"}], "]"}]}], "]"}], 
               ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"Sphere", "[", 
                RowBox[{
                 RowBox[{"CalculateNewPos", "[", 
                  RowBox[{"prevPos", ",", 
                   RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], 
                   ",", 
                   RowBox[{"DegreeToRadian", "[", 
                    RowBox[{"curTheta", "+", "diffTheta1"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], 
                "]"}]}], "\[IndentingNewLine]", "\t\t", "}"}], "]"}], ",", 
            "\n", "\t\t\t", 
            RowBox[{"Graphics3D", "[", 
             RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"depth", "/", "n"}], "<", "0.5"}], ",", "Brown", 
                 ",", "Green"}], "]"}], ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"GenerateCylinder", "[", 
                RowBox[{"prevPos", ",", 
                 RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}], ",", 
                 RowBox[{"DegreeToRadian", "[", 
                  RowBox[{"curTheta", "-", "diffTheta2"}], "]"}]}], "]"}], 
               ",", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"Sphere", "[", 
                RowBox[{
                 RowBox[{"CalculateNewPos", "[", 
                  RowBox[{"prevPos", ",", 
                   RowBox[{"CalculateNewLength", "[", "prevLength", "]"}], 
                   ",", 
                   RowBox[{"DegreeToRadian", "[", 
                    RowBox[{"curTheta", "-", "diffTheta2"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], 
                "]"}]}], "\[IndentingNewLine]", "\t\t", "}"}], "]"}]}], "\n", 
           "\t\t", "}"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevSize", "=", 
        RowBox[{"CalculateNewSize", "[", "prevSize", "]"}]}], ";", "\n", "\t", 
       RowBox[{"prevLength", "=", 
        RowBox[{"CalculateNewLength", "[", "prevLength", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"i", "=", 
        RowBox[{"i", "+", "1"}]}], ";", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "\[NotEqual]", "n"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "+", "diffTheta1"}], "]"}]}], "]"}], ",", 
            "prevLength", ",", "prevSize", ",", 
            RowBox[{"curTheta", "+", "diffTheta1"}], ",", "i", ",", "n"}], 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{"CreateTree", "[", 
           RowBox[{
            RowBox[{"CalculateNewPos", "[", 
             RowBox[{"prevPos", ",", "prevLength", ",", 
              RowBox[{"DegreeToRadian", "[", 
               RowBox[{"curTheta", "-", "diffTheta2"}], "]"}]}], "]"}], ",", 
            " ", "prevLength", ",", " ", "prevSize", ",", " ", 
            RowBox[{"curTheta", "-", "diffTheta2"}], ",", "i", ",", "n"}], 
           "]"}], ";"}], ","}], "\n", "\t", "]"}]}]}], "\n", "]"}]}], "\n", 
   RowBox[{
    RowBox[{"CreateTree", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "initLength"}], "}"}], ",", "initLength", 
      ",", "initSize", ",", "initTheta", ",", "0", ",", "numIterations"}], 
     "]"}], ";"}], "\n", 
   RowBox[{"Show", "[", "tree", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6749108906536036`*^9, 3.6749108907016077`*^9}, {
  3.6749109287734146`*^9, 3.674910974310968*^9}},
 CellID->80]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions", "Section",
 CellID->20],

Cell["\<\
I am pretty satisfied as to how this turned out. I feel like I learned a lot \
in the process and definitely got a feel around the procedural programming \
aspects of Mathematica. I also realized that I don't like them and find them \
unintuitive relative to other programming languages. However, I can't be too \
critical as it was designed as a functional programming language.\
\>", "Text",
 CellID->22]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further Exploration", "Section",
 CellID->24],

Cell["\<\
One thing that I did not have the time to do, that I thought would have been \
fun, is to divert slightly from the fractal idea and instead generate the \
tree structure using pseudo-random functions provided by Mathematica.
The idea would be to have some percentage chance that you would branch at a \
certain depth. (This would also allow for more wild trees to be generated \
depending on how the percentage cut-off dips off).
From there you would also randomize the angles at which the branches would \
divert. This, given vetted parameters, would most likely produce much more \
organic looking trees than the ones that I generated.

Another idea is to simply generate the branches in more angles other than \
only diverting about the Y-Axis. I decided not to do this because I wasn't \
sure about how many objects I could generate before Mathematica's memory \
buffers were filled, but it could be an interesting idea to explore.\
\>", "Text",
 CellChangeTimes->{{3.6749104868292246`*^9, 3.6749104885904007`*^9}},
 CellID->25]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.1 for Microsoft Windows (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 74, 1, 111, "Title",
 CellID->87],
Cell[657, 25, 54, 1, 59, "Subtitle",
 CellID->90],
Cell[CellGroupData[{
Cell[736, 30, 308, 4, 25, "Subsubitem"],
Cell[1047, 36, 316, 5, 25, "Subsubitem"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1400, 46, 77, 1, 78, "Section",
 CellID->93],
Cell[1480, 49, 288, 6, 53, "Text",
 CellID->96],
Cell[1771, 57, 149, 4, 32, "Input",
 CellID->153],
Cell[1923, 63, 438, 10, 32, "Text",
 CellID->175]
}, Open  ]],
Cell[CellGroupData[{
Cell[2398, 78, 53, 1, 78, "Section",
 CellID->12],
Cell[2454, 81, 5161, 483, 302, "Text",
 CellID->469],
Cell[7618, 566, 3090, 58, 113, "Input",
 InitializationCell->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[10745, 629, 44, 1, 78, "Section",
 CellID->14],
Cell[10792, 632, 326, 6, 53, "Text",
 CellID->16],
Cell[CellGroupData[{
Cell[11143, 642, 45, 1, 53, "Subsection",
 CellID->17],
Cell[11191, 645, 209, 5, 33, "Text",
 CellID->470],
Cell[11403, 652, 881, 14, 101, "Input",
 CellID->8]
}, Open  ]],
Cell[CellGroupData[{
Cell[12321, 671, 80, 1, 53, "Subsection",
 CellID->21],
Cell[12404, 674, 1083, 116, 53, "Text",
 CellID->471],
Cell[13490, 792, 875, 25, 133, "Input",
 CellID->82]
}, Open  ]],
Cell[CellGroupData[{
Cell[14402, 822, 80, 1, 53, "Subsection",
 CellID->43],
Cell[14485, 825, 336, 7, 32, "Text",
 CellID->473],
Cell[14824, 834, 2361, 58, 293, "Input",
 CellID->89]
}, Open  ]],
Cell[CellGroupData[{
Cell[17222, 897, 75, 1, 53, "Subsection",
 CellID->45],
Cell[17300, 900, 9301, 585, 156, "Text",
 CellID->475],
Cell[26604, 1487, 6072, 128, 613, "Input",
 CellID->150]
}, Open  ]],
Cell[CellGroupData[{
Cell[32713, 1620, 69, 1, 53, "Subsection",
 CellID->53],
Cell[CellGroupData[{
Cell[32807, 1625, 62, 1, 43, "Subsubsection",
 CellID->86],
Cell[32872, 1628, 232, 5, 32, "Text",
 CellID->176],
Cell[33107, 1635, 4951, 109, 653, "Input",
 CellID->88]
}, Open  ]],
Cell[CellGroupData[{
Cell[38095, 1749, 53, 1, 43, "Subsubsection",
 CellID->75],
Cell[38151, 1752, 1173, 18, 95, "Text"],
Cell[39327, 1772, 5837, 131, 693, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45201, 1908, 53, 1, 43, "Subsubsection",
 CellID->78],
Cell[45257, 1911, 1840, 136, 54, "Text",
 CellID->152],
Cell[47100, 2049, 6772, 155, 733, "Input",
 CellID->80]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53933, 2211, 43, 1, 78, "Section",
 CellID->20],
Cell[53979, 2214, 416, 7, 53, "Text",
 CellID->22]
}, Open  ]],
Cell[CellGroupData[{
Cell[54432, 2226, 51, 1, 78, "Section",
 CellID->24],
Cell[54486, 2229, 1042, 17, 137, "Text",
 CellID->25]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
